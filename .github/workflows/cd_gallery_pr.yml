name: Docker CI/CD for Gallery for branches
on:
  pull_request:
    branches:
      - main
      - '*'
    paths:
      - gallery/**
env:
  branch_name: dev
jobs:
  Unit-Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          pip install flake8 pytest requests
          pip install -r ./gallery/app/requirements.txt
      - name: Test gallery
        run: |
          pytest -v gallery/tests/ --doctest-modules --junitxml=junit/test-results-gallery.xml
      - name: Upload gallery pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-gallery
          path: junit/test-results-gallery.xml

  Build_and_Push:
    needs:
      - Unit-Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: actions/setup-buildx-action@v1
      - name: Log in to registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./gallery
          file: ./gallery/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: craigallerydev001.azurecr.io/dstoolkitaiux:{{env.branch_name }}

  Releases_Branch:
    needs:
      - Unit-Test
      - Build_and_Push
    # env:
    #   url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'app-aigallery-dev-001'
          slot-name: slot01
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_SLOT01 }}
          images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/dstoolkitaiux:${{env.branch_name }}