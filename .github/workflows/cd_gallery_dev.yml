name: Docker Gallery [DEV]
on:
  push:
    paths:
      - gallery/**
    branches:
      - develop
  # workflow_dispatch:
jobs:
  Unit-Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          pip install flake8 pytest requests
          pip install -r ./gallery/app/requirements.txt
      - name: Test gallery
        run: |
          pytest -v gallery/tests/ --doctest-modules --junitxml=junit/test-results-gallery.xml
      - name: Upload gallery pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-gallery
          path: junit/test-results-gallery.xml
        if: ${{ always() }}

  Build_and_Push:
    environment: dev
    needs:
      - Unit-Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_LOGIN_SERVER_DEV }}
          username: ${{ secrets.REGISTRY_USERNAME_DEV }}
          password: ${{ secrets.REGISTRY_PASSWORD_DEV }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./gallery
          file: ./gallery/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: acrdstoolkitdemodev.azurecr.io/dstoolkitaiux:latest